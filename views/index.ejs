<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Image Processor</title>
    <link rel="stylesheet" href="/style.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <h1>üñºÔ∏è Image Processor</h1>

    <form id="uploadForm" enctype="multipart/form-data">
        <div class="main-container">
            <div class="upload-section">
                <h2>Upload Image</h2>

                <div id="dropArea" class="drop-area">
                    <p id="dropText">üìÇ Drag & drop or click to upload</p>
                    <img id="previewImage" />
                    <input id="imageInput" type="file" name="image" accept="image/*" />
                </div>

                <button type="submit">Upload</button>

                <div id="progressContainer" style="display:none;">
                    <div id="progressBar"></div>
                </div>
            </div>

            <div class="output-section">
                <h2>Processed Output</h2>
                <div class="image-box">
                    <p id="outputPlaceholder" class="placeholder">Your processed image will appear here.</p>
                    <img id="outputImage" src="" alt="Processed Image" style="display:none;" />
                </div>
                <a id="downloadLink" href="#" download style="display:none;">
                    <button class="download-btn" type="button">Download</button>
                </a>
            </div>
        </div>
    </form>

    <div class="settings-section">
        <h2>Settings</h2>
        <p>Future filters and options will go here.</p>
    </div>

    <script>
        const imageInput = document.getElementById('imageInput');
        const previewImage = document.getElementById('previewImage');
        const dropArea = document.getElementById('dropArea');
        const dropText = document.getElementById('dropText');
        const uploadForm = document.getElementById('uploadForm');
        const progressBar = document.getElementById('progressBar');
        const progressContainer = document.getElementById('progressContainer');
        const outputImage = document.getElementById('outputImage'); // Get reference here
        const outputPlaceholder = document.getElementById('outputPlaceholder'); // Get reference here
        const downloadLink = document.getElementById('downloadLink'); // Get reference here


        function showPreview(file) {
            const reader = new FileReader();
            reader.onload = e => {
                previewImage.src = e.target.result;
                previewImage.style.display = 'block';
                dropText.style.display = 'none';
            };
            reader.readAsDataURL(file);
        }

        imageInput.addEventListener('change', () => {
            if (imageInput.files[0]) showPreview(imageInput.files[0]);
        });

        ['dragenter', 'dragover'].forEach(event =>
            dropArea.addEventListener(event, e => {
                e.preventDefault();
                e.stopPropagation();
                dropArea.classList.add('drag-over');
            })
        );

        ['dragleave', 'drop'].forEach(event =>
            dropArea.addEventListener(event, e => {
                e.preventDefault();
                e.stopPropagation();
                dropArea.classList.remove('drag-over');
            })
        );

        dropArea.addEventListener('click', () => imageInput.click());

        dropArea.addEventListener('drop', e => {
            const file = e.dataTransfer.files[0];
            if (file) {
                imageInput.files = e.dataTransfer.files;
                showPreview(file);
            }
        });

        uploadForm.addEventListener('submit', function (e) {
            e.preventDefault();

            if (!imageInput.files || imageInput.files.length === 0) {
                alert('Please select an image before uploading.');
                return;
            }

            const formData = new FormData();
            formData.append('image', imageInput.files[0]);

            const xhr = new XMLHttpRequest();

            progressContainer.style.display = 'block';
            progressBar.style.width = '0%';

            // Hide previous output and download link when a new upload starts
            outputImage.style.display = 'none';
            outputPlaceholder.style.display = 'block';
            downloadLink.style.display = 'none';


            xhr.upload.addEventListener('progress', e => {
                if (e.lengthComputable) {
                    const percent = (e.loaded / e.total) * 100;
                    progressBar.style.width = percent + '%';
                }
            });

            xhr.onreadystatechange = () => {
                if (xhr.readyState === 4) {
                    progressContainer.style.display = 'none';

                    if (xhr.status === 200) {
                        const response = JSON.parse(xhr.responseText);
                        // These elements are already defined globally or should be if used often
                        // const outputImage = document.getElementById('outputImage');
                        // const outputPlaceholder = document.getElementById('outputPlaceholder');
                        // const downloadLink = document.getElementById('downloadLink');

                        outputImage.src = response.outputImage;
                        outputImage.style.display = 'block';
                        outputPlaceholder.style.display = 'none';

                        const filename = response.outputImage.split('/').pop();
                        downloadLink.href = response.outputImage;
                        downloadLink.setAttribute('download', filename);
                        downloadLink.style.display = 'inline-block';
                    } else {
                        alert('Processing failed.');
                        console.error(xhr.responseText);
                    }

                    progressBar.style.width = '0%';
                }
            };

            xhr.open('POST', '/upload', true);
            xhr.send(formData);
        });
    </script>
</body>
</html>